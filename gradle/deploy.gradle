

	
/**
 * 增加组件上传支持
 */
def uploadArchivesSupport = { subproj ->
	
	// 检测是否为快照版本
	def snapshot = (subproj.version.toLowerCase().indexOf("snapshot") != -1 )
	
	// 发布源代码
	task "source_jar_${subproj.name}" (type: Jar, overwrite: true) {
		from subproj.sourceSets.main.allJava
	}
	
	// 创建构建仓库索引的脚本，每个仓库类型创建一个（snapshot/releast）,每次创建均尝试覆盖
	task "maven_build_index_${snapshot}" (type:Exec, overwrite: true) {
		def publishType = snapshot ? "snapshot" : "release"
		File path = new File("${rootProject.rootDir}/dist/${publishType}/.index/");
		path.listFiles().each { f ->
			if (f.getName().endsWith(".bat")) f.delete();
		}
		File newSh = new File(path, "buildIndex" + ".bat");
		newSh.getParentFile().mkdirs();
		newSh.createNewFile();
		//
		def out = newSh.newPrintWriter() //  
		//	out.write('#!/bin/bash')  
		//	out.write('\n\n')  
		out.write("cd ${rootProject.rootDir}/dist/${publishType}/.index/")  
		out.write('\n')  
		out.write("java -jar ${rootProject.rootDir}/libs/nexus-indexer-2.0.5-cli.jar -t full -i . -n . -r ../")  
		out.write('\n')  
		out.flush()  
		out.close()
		//
		commandLine 'cmd', '/c', newSh.getAbsolutePath()
		//
		// newSh.deleteOnExit();
	}

	subproj.publishing {
		publications {
			task "maven_publish_${subproj.name}_" (MavenPublication) {
				groupId (project_group)
				artifactId subproj.name
				version subproj.version

				from subproj.components.java

				artifact rootProject."source_jar_${subproj.name}" {
					classifier "sources"
				}
				
				pom.withXml {
					asNode().appendNode('description', project_description)
					asNode().appendNode('url', "https://github.com/${github_org}/${project_name}")
				}
			}
		}
		repositories {
			def publishUrl = "file://" + new File(rootProject.rootDir, "dist").getAbsolutePath()
					.replaceAll("\\\\", "\\/") + "/" + (snapshot ? "snapshot" : "release")
			maven {
				url (publishUrl)
			}
		}
	}
	
	// 发布完成后，自动重建索引
	subproj.publish.finalizedBy rootProject."maven_build_index_${snapshot}"
	
}

ext {
    ext_deploy = [:]
    ext_deploy['uploadArchivesSupport'] = uploadArchivesSupport
}